AddStore("FETCHREQUESTS")Lib.Fetch=function(a,b)local c=promise.new()PerformHttpRequest(b,function(d,e,f)if d==200 then c:resolve(json.decode(e))else c:resolve(nil)end end,"GET","",{["Content-Type"]="application/json"})return Citizen.Await(c)end;Lib.RegisterCallback(GetCurrentResourceName(),"lib:doFetch",function(g)for h,i in pairs(STORE.FETCHREQUESTS)do if i.name==g then return Lib.Fetch(GetCurrentResourceName(),i.url),false end end;return nil,"Didn't find fetch request, is it registered?"end)Lib.RegisterFetch=function(a,g,b)AddToStore("FETCHREQUESTS",a,{name=g,url=b})end;Lib.VersionCheck=function(a,j,k)if not(j and k)then print(("Resource Version Check, invoked from %s, is missing org or repo"):format(a))return false,"Missing org or repo"end;local b="https://api.github.com/repos/"..j.."/"..k.."/tags"local l=Lib.Fetch(a,b)if l then local m=l[1].name;local n=GetResourceMetadata(a,"version")n=("v%s"):format(n)if m~=n then print("Resource "..a.." is outdated. Current: "..n.." Latest: "..m)end;return m==n,m,n end;return true,"Couldn't get version"end