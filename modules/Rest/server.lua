AddStore("FETCHREQUESTS")Server.Fetch=function(a,b)local c=promise.new()PerformHttpRequest(b,function(d,e,f)if d==200 then c:resolve(json.decode(e))else c:resolve(nil)end end,"GET","",{["Content-Type"]="application/json"})return Citizen.Await(c)end;Server.Post=function(a,b,g)local c=promise.new()PerformHttpRequest(b,function(d,e,f)if d==200 or d==201 or d==204 then c:resolve(json.decode(e))else print(("Failed to post data to %s, status code: %s"):format(b,d))c:resolve(nil)end end,"POST",json.encode(g),{["Content-Type"]="application/json"})return Citizen.Await(c)end;Server.RegisterCallback(GetCurrentResourceName(),"lib:doFetch",function(h)for i,j in pairs(STORE.FETCHREQUESTS)do if j.name==h then return Server.Fetch(GetCurrentResourceName(),j.url),false end end;return nil,"Didn't find fetch request, is it registered?"end)Server.RegisterFetch=function(a,h,b)AddToStore("FETCHREQUESTS",a,{name=h,url=b})end;Server.VersionCheck=function(a,k,l)if not(k and l)then print(("Resource Version Check, invoked from %s, is missing org or repo"):format(a))return false,"Missing org or repo"end;local b="https://api.github.com/repos/"..k.."/"..l.."/tags"local m=Server.Fetch(a,b)if m then local n=m[1].name;local o=GetResourceMetadata(a,"version")o=("v%s"):format(o)if n~=o then print("Resource "..a.." is outdated. Current: "..o.." Latest: "..n)end;return n==o,n,o end;return true,"Couldn't get version"end