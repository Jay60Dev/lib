AddStore("ENTITIES",function(a)if DoesEntityExist(a)then DeleteEntity(a)end end)Client.assertEntityData=function(b,c)local d={{type(c)=="table","paramater passed to SpawnVehicle must be a table"},{type(c.model)=="string","data.model must be a string"},{c.coords,"data.coords must be a vector3 or vector4"},{type(c.coords.x)=="number","data.coords.x must be a number"},{type(c.coords.y)=="number","data.coords.y must be a number"},{type(c.coords.z)=="number","data.coords.z must be a number"},{not c.coords.w or type(c.coords.w)=="number","data.coords.w must be a number or nil"},{not c.networked or type(c.networked)=="boolean","data.networked must be a boolean or nil"}}for e=1,#d do if not d[e][1]then return false,d[e][2]end end;return true,"success"end;Client.LoadModel=function(b,f)if not f then return print("^1ERROR^7: model is required")end;local g=type(f)=="string"and joaat(f)or f;assert(IsModelValid(g),"model does not exist")while not HasModelLoaded(g)do RequestModel(g)Wait(0)end;return g end;Client.RemoveModel=function(b,f)local g=type(f)=="string"and joaat(f)or f;if IsModelValid(g)then SetModelAsNoLongerNeeded(g)end end;Client.LoadAnim=function(b,h)h=type(h)=="table"and h.dict or h.animDict or h;if not h then return print("^1ERROR^7: animDict is required")end;if not DoesAnimDictExist(h)then return print(("^1ANIMDICT^7 %s does not exist"):format(h))end;while not HasAnimDictLoaded(h)do RequestAnimDict(h)Wait(0)end;return h end;Client.RemoveAnim=function(b,h)h=type(h)=="table"and h.dict or h.animDict or h;if not DoesAnimDictExist(h)then return print(("^1ANIMDICT^7 %s does not exist"):format(h))end;RemoveAnimDict(h)end;Client.LoadPtfx=function(b,i)local j=type(i)=="table"and i.dict or i;if not j then return print("^1ERROR^7: ptfx dict is required")end;local k=GetGameTimer()RequestNamedPtfxAsset(j)Shared.Loop(b,function()RequestNamedPtfxAsset(j)end,{timeout=2000,condition=function()return HasNamedPtfxAssetLoaded(j)end})if GetGameTimer()-k>1900 then return print(("^1ERROR^7: timed out loading ptfx %s"):format(j))end;return j end;Client.RemovePtfx=function(b,i)local j=type(i)=="table"and i.dict or i;RemoveNamedPtfxAsset(j)end;Client.DeleteEntity=function(b,a)if DoesEntityExist(a)then DeleteEntity(a)end;for e=1,#STORE.ENTITIES do if STORE.ENTITIES[e]==a then table.remove(STORE.ENTITIES,e)break end end end;local l=function(m)local n=type(m)if n=="number"then return m elseif n=="string"then m=Shared.LookupTable(GetCurrentResourceName(),"lookupTables/carColors.json",m)or m;if m:find("#")then local o=m:gsub("#","")local p,q,r=o:match("(%w%w)(%w%w)(%w%w)")return{tonumber(p,16),tonumber(q,16),tonumber(r,16)}end elseif n=="vector3"then return{m.x,m.y,m.z}end end;Client.SetEntityProperties=function(b,a,c)local s=c.type;if s=="object"then if not c.preventGroundProperly then PlaceObjectOnGroundProperly(a)end end;if c.invincible then SetEntityInvincible(a,true)end;if c.freeze then FreezeEntityPosition(a,true)end;if s=="ped"then if c.blockEvents then SetBlockingOfNonTemporaryEvents(a,true)end;if c.defaultModel then SetPedDefaultComponentVariation(a)end;if c.animation then if Client.LoadAnim()then TaskPlayAnim(a,c.animation.dict,c.animation.clip,8.0,8.0,-1,1,0,false,false,false)end end end;if s=="vehicle"then if not c.networked or c.networked and NetworkGetEntityOwner(a)==PlayerId()then NetworkRequestControlOfEntity(a)if not c.preventGroundProperly then SetVehicleOnGroundProperly(a)end;SetVehicleDoorsLocked(a,c.locked and 2 or 1)SetVehicleEngineOn(a,c.engine,true,true)SetVehicleLights(a,c.lights and 3 or 4)SetVehicleLivery(a,c.livery)if c.color or c.secondColor then c.color1=c.color1 or l(c.color)c.color2=c.color2 or l(c.secondColor)end;if c.windowTint then c.windowTint=type(c.windowTint)=="number"and c.windowTint or Shared.LookupTable("lib","lookupTables/windowTints.json",c.windowTint)end;Client.VehicleProperties.Set(b,a,c)end end;if c.targets and Client.Target.AddEntity then Client.Target.AddEntity(b,a,c.targets)end end;AddStateBagChangeHandler("EntityProperties",nil,function(t,u,c,u,v)if v then return end;local a=GetEntityFromStateBagName(t)if not DoesEntityExist(a)then return end;if c.targets then c.targets=nil;print("^1WARNING^7:targets is not a valid property when coming from server.")end;Client.SetEntityProperties(nil,a,c)end)