AddStore("ENTITIES",function(a)if DoesEntityExist(a)then DeleteEntity(a)end end)Lib.assertEntityData=function(b,c)local d={{type(c)=="table","paramater passed to SpawnVehicle must be a table"},{type(c.model)=="string","data.model must be a string"},{c.coords,"data.coords must be a vector3 or vector4"},{type(c.coords.x)=="number","data.coords.x must be a number"},{type(c.coords.y)=="number","data.coords.y must be a number"},{type(c.coords.z)=="number","data.coords.z must be a number"},{not c.coords.w or type(c.coords.w)=="number","data.coords.w must be a number or nil"},{not c.networked or type(c.networked)=="boolean","data.networked must be a boolean or nil"}}for e=1,#d do if not d[e][1]then return false,d[e][2]end end;return true,"success"end;Lib.LoadModel=function(b,f)local g=type(f)=="string"and joaat(f)or f;assert(IsModelValid(g),"model does not exist")while not HasModelLoaded(g)do RequestModel(g)Wait(0)end;return g end;Lib.RemoveModel=function(b,f)local g=type(f)=="string"and joaat(f)or f;if IsModelValid(g)then SetModelAsNoLongerNeeded(g)end end;Lib.LoadAnim=function(b,h)h=type(h)=="table"and(h.dict or h.animDict)or h;if not DoesAnimDictExist(h)then return print(("^1ANIMDICT^7 %s does not exist"):format(h))end;while not HasAnimDictLoaded(h)do RequestAnimDict(h)Wait(0)end;return h end;Lib.RemoveAnim=function(b,h)h=type(h)=="table"and(h.dict or h.animDict)or h;if not DoesAnimDictExist(h)then return print(("^1ANIMDICT^7 %s does not exist"):format(h))end;RemoveAnimDict(h)end