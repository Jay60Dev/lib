Config=Config or{}Lib={}STORE={}Resources={}Server=IsDuplicityVersion()Client=not Server;NUILoaded=false;local a={}local b=GetGameTimer()WaitForNUI=function()print("NUI not loaded, and this function hasnt had enough time to generate.")end;Config.ForceResource=Config.ForceResource or{}Config.RenamedResources=Config.RenamedResources or{}for c,d in pairs(Config.RenamedResources)do if type(d)=="boolean"then Config.RenamedResources[c]=c end end;Lib.GetResourceTitle=function(e,f)return Config.RenamedResources[e]or f end;if Client then RegisterNUICallback("loaded",function(g,h)NUILoaded=true;h({})end)WaitForNUI=function()local i=GetGameTimer()if NUILoaded then return true end;if i-b>10000 then return NUILoaded end;while not NUILoaded do Wait(0)end;return NUILoaded end end;local j=Lib.GetResourceTitle(nil,"ox_lib")if GetResourceState(j)=="started"then load(LoadResourceFile(j,"init.lua"))()end;local k=function(l)if Client then SendNUIMessage({action="stopResource",resource=l})end;if l==GetCurrentResourceName()then for c in pairs(STORE)do local h=a[c]for e in pairs(STORE[c])do for m=1,#STORE[c][e]do local n=STORE[c][e][m]if type(h)=="function"then h(n)end end end end end;for c in pairs(STORE)do local o=STORE[c][l]if o then local h=a[c]for m=1,#o do local n=o[m]if type(h)=="function"then h(n)end end;STORE[c][l]=nil end end end;RegisterNetEvent('onResourceStop',k)AddStore=function(c,h)STORE[c]={}a[c]=h end;AddToStore=function(p,l,g)if not p then print("STORE is required, got nil")return end;if not l then print("RESOURCE is required, got nil for store:",p)print(debug.traceback())return end;if not GetResourceState(l)=="started"then return print(("RESOURCE %s is not started"):format(l))end;if not STORE[p]then return print(("STORE %s does not exist"):format(p))end;STORE[p][l]=STORE[p][l]or{}STORE[p][l][#STORE[p][l]+1]=g end;Lib.LookupTable=function(e,q,d)local r=LoadResourceFile(e,q)local s=json.decode(r)if not s then return print(("Failed to decode json file %s"):format(q))end;d=d:lower()local t=s[d]collectgarbage("collect")return t end;local u={["qb-core"]={"qbx_core"}}Lib.UseResource=function(e)local v=debug.getinfo(2,"S").short_src;local w={}for m in string.gmatch(v,"([^/]+)")do w[#w+1]=m end;local x=w[#w-2]local l=w[#w-1]e=Config.RenamedResources[l]or l;if Resources[x]and Resources[x]~="^1NOT FOUND^7"then return false end;Resources[x]=Resources[x]or"^1NOT FOUND^7"for c,d in pairs(u)do if e==c then for m=1,#d do local y=d[m]if GetResourceState(y)~="missing"then return false end end end end;if Config.ForceResource[x]then local z=Config.ForceResource[x]==e;if not z then return false end end;local A=GetResourceState(e)~="missing"Resources[x]=A and e or Resources[x]return A,A and exports[e]or nil end