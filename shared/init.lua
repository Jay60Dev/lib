Config=Config or{}Lib={}STORE={}Resources={}Server=IsDuplicityVersion()Client=not Server;NUILoaded=false;local a={}local b=GetGameTimer()WaitForNUI=function()print("NUI not loaded, and this function hasnt had enough time to generate.")end;if Client then RegisterNUICallback("loaded",function(c,d)NUILoaded=true;d({})end)WaitForNUI=function()local e=GetGameTimer()if NUILoaded then return true end;if e-b>10000 then return NUILoaded end;while not NUILoaded do Wait(0)end;return NUILoaded end end;if GetResourceState("ox_lib")=="started"then load(LoadResourceFile("ox_lib","init.lua"))()end;local f=function(g)if Client then SendNUIMessage({action="stopResource",resource=g})end;if g==GetCurrentResourceName()then for h in pairs(STORE)do local d=a[h]for i in pairs(STORE[h])do for j=1,#STORE[h][i]do local k=STORE[h][i][j]if type(d)=="function"then d(k)end end end end end;for h in pairs(STORE)do local l=STORE[h][g]if l then local d=a[h]for j=1,#l do local k=l[j]if type(d)=="function"then d(k)end end;STORE[h][g]=nil end end end;RegisterNetEvent('onResourceStop',f)AddStore=function(h,d)STORE[h]={}a[h]=d end;AddToStore=function(m,g,c)if not m then print("STORE is required, got nil")return end;if not g then print("RESOURCE is required, got nil for store:",m)print(debug.traceback())return end;if not GetResourceState(g)=="started"then return print(("RESOURCE %s is not started"):format(g))end;if not STORE[m]then return print(("STORE %s does not exist"):format(m))end;STORE[m][g]=STORE[m][g]or{}STORE[m][g][#STORE[m][g]+1]=c end;Lib.LookupTable=function(i,n,o)local p=LoadResourceFile(i,n)local q=json.decode(p)if not q then return print(("Failed to decode json file %s"):format(n))end;o=o:lower()local r=q[o]collectgarbage("collect")return r end;Config.ForceResource=Config.ForceResource or{}Config.RenamedResources=Config.RenamedResources or{}for h,o in pairs(Config.RenamedResources)do if type(o)=="boolean"then Config.RenamedResources[h]=h end end;IsMissing=function(s,g)Resources[s]=Resources[s]or"^1NOT FOUND^7"if g=="qb-core"and GetResourceState("qbx_core")~="missing"then return false end;local i=Config.RenamedResources[g]or g;if Config.ForceResource[s]then local t=Config.ForceResource[s]==i;if not t then return false end end;local u=GetResourceState(i)~="missing"Resources[s]=u and i or Resources[s]return u end