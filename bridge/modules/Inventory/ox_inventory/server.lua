local a,b=Shared.UseResource()if not a then return end;Server.Inventory=Server.Inventory or{}Server.Inventory.GetAllItems=function(c,d)return Shared.Table.RemoveNilValues(c,b:GetInventoryItems(d))end;Server.Inventory.GetMaxSlots=function()return tonumber(GetConvarInt('inventory:slots',30))end;Server.Inventory.GetMaxWeightForPlayer=function(c,d)return tonumber(GetConvarInt('inventory:weight',30000))end;Server.Inventory.GetItemWeight=function(c,e)local f=b:Items(e)return f and f.weight or 0 end;Server.Inventory.GetLabel=function(c,e)local f=b:Items(e)return f and f.label or e end;Server.Inventory.AddItem=function(c,d,f,g,h,i)g=g or 1;local j=Server.Inventory.CanCarry(c,d,f,g)if not j then if not Config.DropItemsWhenInventoryFull.enabled then return false end;local k=GetPlayerPed(d)local l=GetEntityCoords(k)return b:CustomDrop("Dropped",{{f,g,h}},l,1,nil,nil,joaat(Config.DropItemsWhenInventoryFull.model))end;return b:AddItem(d,f,g,h,i)end;Server.Inventory.RemoveItem=function(c,d,f,g,h,i)g=g or 1;return b:RemoveItem(d,f,g,h,i)end